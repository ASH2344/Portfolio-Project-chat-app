{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Portfolio-project-real-time-chaat-app\\\\frontend\\\\src\\\\components\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar() {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    socket,\n    setMembers,\n    members,\n    setCurrentRoom,\n    setRooms,\n    privateMemberMsg,\n    room,\n    setPrivateMemberMsg,\n    currentRoom\n  } = useContext(AppContext);\n  socket.off('new-user').on('new-user', payload => {\n    setMembers(payload);\n  });\n\n  function joinRoom(room) {\n    let isPublic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!user) {\n      return alert(\"Please login\");\n    }\n\n    socket.emit(\"join-room\", room, currentRoom);\n    setCurrentRoom(room);\n\n    if (isPublic) {\n      setPrivateMemberMsg(null);\n    } // dispatch for notifications\n\n\n    dispatch(resetNotifications(room));\n  }\n\n  socket.off(\"notifications\").on(\"notifications\", room => {\n    if (currentRoom !== room) dispatch(addNotifications(room));\n  });\n  useEffect(() => {\n    if (user) {\n      setCurrentRoom(\"general\");\n      getRooms();\n      socket.emit(\"join-room\", \"general\");\n      socket.emit(\"new-user\");\n    }\n  }, []);\n  socket.off(\"new-user\").on(\"new-user\", payload => {\n    setMembers(payload);\n  });\n\n  function getRooms() {\n    fetch(\"http://localhost:5000/rooms\").then(res => res.json()).then(data => setRooms(data));\n  }\n\n  function orderIds(id1, id2) {\n    if (id1 > id2) {\n      return id1 + \"-\" + id2;\n    } else {\n      return id2 + \"-\" + id1;\n    }\n  }\n\n  function handlePrivateMemberMsg(member) {\n    setPrivateMemberMsg(member);\n    const roomId = orderIds(user._id, member._id);\n    joinRoom(roomId, false);\n  }\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: rooms.map((room, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        onClick: () => joinRoom(room),\n        active: room === currentRoom,\n        style: {\n          cursor: \"pointer\",\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [room, \" \", currentRoom !== room, user.newMessages[room] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge rounded-pill bg-primary\",\n          children: user.newMessages[room]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), members.map(member => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: \"pointer\"\n      },\n      active: (privateMemberMsg === null || privateMemberMsg === void 0 ? void 0 : privateMemberMsg._id) == (member === null || member === void 0 ? void 0 : member._id),\n      onClick: () => handlePrivateMemberMsg(member),\n      disabled: member._id === user._id,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          className: \"member-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: member.picture,\n            alt: member.name,\n            className: \"member-status-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), member.status == \"online\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-circle sidebar-online-status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 58\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-circle sidebar-offline-status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 116\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 9,\n          children: [member.name, member._id === (user === null || user === void 0 ? void 0 : user._id) && \" (You)\", member.status === \"offline\" && \" (Offline)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge rounded-pill bg-primary\",\n            children: user.newMessages[orderIds(member._id, user._id)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Sidebar, \"9keOtZQRguN5OYlbUQw3p2OdNm0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/USER/Portfolio-project-real-time-chaat-app/frontend/src/components/Sidebar.js"],"names":["React","useContext","useEffect","Col","ListGroup","Row","useDispatch","useSelector","AppContext","addNotifications","resetNotifications","Sidebar","user","state","dispatch","socket","setMembers","members","setCurrentRoom","setRooms","privateMemberMsg","room","setPrivateMemberMsg","currentRoom","off","on","payload","joinRoom","isPublic","alert","emit","getRooms","fetch","then","res","json","data","orderIds","id1","id2","handlePrivateMemberMsg","member","roomId","_id","rooms","map","idx","cursor","display","justifyContent","newMessages","picture","name","status","id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\n\nfunction Sidebar() {\n    const user = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n    const { socket, setMembers, members, setCurrentRoom, setRooms, privateMemberMsg, room, setPrivateMemberMsg, currentRoom } = useContext(AppContext);\n    socket.off('new-user').on('new-user', (payload)=>{\n        setMembers(payload);\n    } )\n      function joinRoom(room, isPublic = true) {\n        if (!user) {\n            return alert(\"Please login\");\n        }\n        socket.emit(\"join-room\", room, currentRoom);\n        setCurrentRoom(room);\n\n        if (isPublic) {\n            setPrivateMemberMsg(null);\n        }\n        // dispatch for notifications\n        dispatch(resetNotifications(room));\n    }\n\n    socket.off(\"notifications\").on(\"notifications\", (room) => {\n        if (currentRoom !== room) dispatch(addNotifications(room));\n    });\n\n    useEffect(() => {\n        if (user) {\n            setCurrentRoom(\"general\");\n            getRooms();\n            socket.emit(\"join-room\", \"general\");\n            socket.emit(\"new-user\");\n        }\n    }, []);\n\n    socket.off(\"new-user\").on(\"new-user\", (payload) => {\n        setMembers(payload);\n    });\n\n    function getRooms() {\n        fetch(\"http://localhost:5000/rooms\")\n            .then((res) => res.json())\n            .then((data) => setRooms(data));\n    }\n\n    function orderIds(id1, id2) {\n        if (id1 > id2) {\n            return id1 + \"-\" + id2;\n        } else {\n            return id2 + \"-\" + id1;\n        }\n    }\n\n    function handlePrivateMemberMsg(member) {\n        setPrivateMemberMsg(member);\n        const roomId = orderIds(user._id, member._id);\n        joinRoom(roomId, false);\n    }\n\n    if (!user) {\n        return <></>;\n    }\n    return (\n        <>\n            <h2>Available rooms</h2>\n            <ListGroup>\n            {rooms.map((room, idx) => (\n    <ListGroup.Item key={idx} onClick={() => joinRoom(room)} active={room === currentRoom} style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}>\n        {room} {currentRoom !== room }\n         {user.newMessages[room] > 0\n         && <span className=\"badge rounded-pill bg-primary\">{user.newMessages[room]}</span>}\n    </ListGroup.Item>\n\n    \n))}  \n\n            </ListGroup>\n            <h2>Members</h2>\n            {members.map((member) => (\n                <ListGroup.Item key={member.id} style={{ cursor: \"pointer\" }} active={privateMemberMsg?._id == member?._id} onClick={() => handlePrivateMemberMsg(member)} disabled={member._id === user._id}>\n                    <Row>\n                        <Col xs={2} className=\"member-status\">\n                        <img src={member.picture} alt={member.name} className=\"member-status-img\" />\n\n                            {member.status == \"online\" ? <i className=\"fas fa-circle sidebar-online-status\"></i> : <i className=\"fas fa-circle sidebar-offline-status\"></i>}\n                        </Col>\n                        <Col xs={9}>\n                            {member.name}\n                            {member._id === user?._id && \" (You)\"}\n                            {member.status === \"offline\" && \" (Offline)\"}\n                        </Col>\n                        <Col xs={1}>\n                            <span className=\"badge rounded-pill bg-primary\">{user.newMessages[orderIds(member._id, user._id)]}</span>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            ))}\n        </>\n    );\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}