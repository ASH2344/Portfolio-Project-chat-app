{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Portfolio-project-real-time-chaat-app\\\\frontend\\\\src\\\\components\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar() {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    socket,\n    setMembers,\n    members,\n    setCurrentRoom,\n    setRooms,\n    privateMemberMsg,\n    rooms,\n    setPrivateMemberMsg,\n    currentRoom\n  } = useContext(AppContext);\n\n  function joinRoom(room) {\n    let isPublic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!user) {\n      return alert(\"Please login\");\n    }\n\n    socket.emit(\"join-room\", room, currentRoom);\n    setCurrentRoom(room);\n\n    if (isPublic) {\n      setPrivateMemberMsg(null);\n    } // dispatch for notifications\n\n\n    dispatch(resetNotifications(room));\n  }\n\n  socket.off(\"notifications\").on(\"notifications\", room => {\n    if (currentRoom != room) dispatch(addNotifications(room));\n  });\n  useEffect(() => {\n    if (user) {\n      setCurrentRoom(\"general\");\n      getRooms();\n      socket.emit(\"join-room\", \"general\");\n      socket.emit(\"new-user\");\n    }\n  }, []);\n  socket.off(\"new-user\").on(\"new-user\", payload => {\n    setMembers(payload);\n  });\n\n  function getRooms() {\n    fetch(\"http://localhost:5000/rooms\").then(res => res.json()).then(data => setRooms(data));\n  }\n\n  function orderIds(id1, id2) {\n    if (id1 > id2) {\n      return id1 + \"-\" + id2;\n    } else {\n      return id2 + \"-\" + id1;\n    }\n  }\n\n  function handlePrivateMemberMsg(member) {\n    setPrivateMemberMsg(member);\n    const roomId = orderIds(user._id, member._id);\n    joinRoom(roomId, false);\n  }\n\n  const handlePrivateMessage = member => {\n    const privateMessage = {\n      toUserId: member._id,\n      content: \"Your initial private message content\",\n      // Add the actual message here\n      sender: user,\n      time: \"12:00\",\n      // Replace with the actual time\n      date: \"01/01/2023\" // Replace with the actual date\n\n    };\n    socket.emit('private-message', privateMessage);\n  };\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: rooms.map((room, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"rooms-list\",\n        onClick: () => joinRoom(room),\n        active: room === currentRoom,\n        style: {\n          backgroundColor: room === currentRoom ? '#317874' : 'transparent',\n          borderColor: '#317874',\n          cursor: 'pointer',\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [room, ' ', currentRoom !== room && user.newMessages && user.newMessages[room] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge rounded-pill bg-primary\",\n          children: user.newMessages[room]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 1\n    }, this), members.map(member => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: \"pointer\",\n        backgroundColor: (privateMemberMsg === null || privateMemberMsg === void 0 ? void 0 : privateMemberMsg._id) === member._id ? \"#317874\" : \"transparent\",\n        // Set the background color for the active member item\n        borderColor: \"#317874\"\n      },\n      active: (privateMemberMsg === null || privateMemberMsg === void 0 ? void 0 : privateMemberMsg._id) === member._id,\n      onClick: () => handlePrivateMemberMsg(member),\n      disabled: member._id === user._id,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          className: \"member-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: member.picture,\n            className: \"member-status-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), member.status === \"online\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-circle sidebar-online-status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-circle sidebar-offline-status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 9,\n          children: [member.name, member._id === (user === null || user === void 0 ? void 0 : user._id) && \" (You)\", member.status === \"offline\" && \" (Offline)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 1,\n          children: user && user.newMessages && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge rounded-pill bg-primary\",\n            children: user.newMessages[orderIds(member._id, user._id)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Sidebar, \"6CEj8Me5lNL4W32ff47MHQbV/VA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/USER/Portfolio-project-real-time-chaat-app/frontend/src/components/Sidebar.js"],"names":["React","useContext","useEffect","useState","Col","ListGroup","Row","useDispatch","useSelector","AppContext","addNotifications","resetNotifications","Sidebar","user","state","dispatch","socket","setMembers","members","setCurrentRoom","setRooms","privateMemberMsg","rooms","setPrivateMemberMsg","currentRoom","joinRoom","room","isPublic","alert","emit","off","on","getRooms","payload","fetch","then","res","json","data","orderIds","id1","id2","handlePrivateMemberMsg","member","roomId","_id","handlePrivateMessage","privateMessage","toUserId","content","sender","time","date","map","idx","backgroundColor","borderColor","cursor","display","justifyContent","newMessages","picture","status","name","id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\n\nfunction Sidebar() {\n    const user = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n    const { socket, setMembers, members, setCurrentRoom, setRooms, privateMemberMsg, rooms, setPrivateMemberMsg, currentRoom } = useContext(AppContext);\n\n    function joinRoom(room, isPublic = true) {\n        if (!user) {\n            return alert(\"Please login\");\n        }\n        socket.emit(\"join-room\", room, currentRoom);\n        setCurrentRoom(room);\n\n        if (isPublic) {\n            setPrivateMemberMsg(null);\n        }\n        // dispatch for notifications\n        dispatch(resetNotifications(room));\n    }\n\n \n\n    socket.off(\"notifications\").on(\"notifications\", (room) => {\n        if (currentRoom != room) dispatch(addNotifications(room));\n    });\n\n    useEffect(() => {\n        if (user) {\n            setCurrentRoom(\"general\");\n            getRooms();\n            socket.emit(\"join-room\", \"general\");\n            socket.emit(\"new-user\");\n        }\n    }, []);\n\n    socket.off(\"new-user\").on(\"new-user\", (payload) => {\n        setMembers(payload);\n    });\n\n    function getRooms() {\n        fetch(\"http://localhost:5000/rooms\")\n            .then((res) => res.json())\n            .then((data) => setRooms(data));\n    }\n\n\n    function orderIds(id1, id2) {\n        if (id1 > id2) {\n            return id1 + \"-\" + id2;\n        } else {\n            return id2 + \"-\" + id1;\n        }\n    }\n\n    function handlePrivateMemberMsg(member) {\n        setPrivateMemberMsg(member);\n        const roomId = orderIds(user._id, member._id);\n        joinRoom(roomId, false);\n    }\n\n    const handlePrivateMessage = (member) => {\n        const privateMessage = {\n          toUserId: member._id,\n          content: \"Your initial private message content\", // Add the actual message here\n          sender: user,\n          time: \"12:00\", // Replace with the actual time\n          date: \"01/01/2023\", // Replace with the actual date\n        };\n    \n        socket.emit('private-message', privateMessage);\n      };\n\n    if (!user) {\n        return <></>;\n    }\n    return (\n        <>\n           <h2>Available rooms</h2>\n<ListGroup>\n  {rooms.map((room, idx) => (\n    <ListGroup.Item\n      className=\"rooms-list\"\n      key={idx}\n      onClick={() => joinRoom(room)}\n      active={room === currentRoom}\n      style={{\n        backgroundColor: room === currentRoom ? '#317874' : 'transparent',\n        borderColor: '#317874',\n        cursor: 'pointer',\n        display: 'flex',\n        justifyContent: 'space-between'\n      }}\n    >\n      {room}{' '}\n      {currentRoom !== room && user.newMessages && user.newMessages[room] && (\n        <span className=\"badge rounded-pill bg-primary\">{user.newMessages[room]}</span>\n      )}\n    </ListGroup.Item>\n  ))}\n</ListGroup>\n\n\n<h2>Members</h2>\n{members.map((member) => (\n    <ListGroup.Item\n        key={member.id}\n        style={{\n            cursor: \"pointer\",\n            backgroundColor: privateMemberMsg?._id === member._id ? \"#317874\" : \"transparent\", // Set the background color for the active member item\n            borderColor: \"#317874\"\n        }}\n        active={privateMemberMsg?._id === member._id}\n        onClick={() => handlePrivateMemberMsg(member)}\n        disabled={member._id === user._id}\n    >\n        <Row>\n            <Col xs={2} className=\"member-status\">\n                <img src={member.picture} className=\"member-status-img\" />\n                {member.status === \"online\" ? (\n                    <i className=\"fas fa-circle sidebar-online-status\"></i>\n                ) : (\n                    <i className=\"fas fa-circle sidebar-offline-status\"></i>\n                )}\n            </Col>\n            <Col xs={9}>\n                {member.name}\n                {member._id === user?._id && \" (You)\"}\n                {member.status === \"offline\" && \" (Offline)\"}\n            </Col>\n            <Col xs={1}>\n                {user && user.newMessages && (\n                    <span className=\"badge rounded-pill bg-primary\">{user.newMessages[orderIds(member._id, user._id)]}</span>\n                )}\n            </Col>\n        </Row>\n    </ListGroup.Item>\n))}\n\n        </>\n    );\n}\n\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}