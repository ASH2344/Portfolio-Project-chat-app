{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Portfolio-project-real-time-chaat-app\\\\frontend\\\\src\\\\components\\\\MessageForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport \"./MessageForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MessageForm() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const user = useSelector(state => state.user);\n  const {\n    socket,\n    currentRoom,\n    setMessages,\n    messages,\n    privateMemberMsg\n  } = useContext(AppContext);\n  const messageEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  function getFormattedDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\n    const day = String(today.getDate()).padStart(2, \"0\");\n    return `${month}/${day}/${year}`;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!message) return;\n    const today = new Date();\n    const minutes = String(today.getMinutes()).padStart(2, \"0\");\n    const time = `${today.getHours()}:${minutes}`;\n    const roomId = currentRoom;\n    socket.emit(\"message-room\", roomId, message, user, time, getFormattedDate());\n    setMessage(\"\");\n  }\n\n  function scrollToBottom() {\n    var _messageEndRef$curren;\n\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-output\",\n      children: [user && messages.map((_ref, idx) => {\n        let {\n          _id: date,\n          messagesByDate\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert alert-success text-center message-date-indicator\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), messagesByDate === null || messagesByDate === void 0 ? void 0 : messagesByDate.map((_ref2, msgIdx) => {\n            let {\n              content,\n              time,\n              from: sender\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: (sender === null || sender === void 0 ? void 0 : sender.email) === (user === null || user === void 0 ? void 0 : user.email) ? \"message\" : \"incoming-message\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-inner\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: sender.picture,\n                    style: {\n                      width: 35,\n                      height: 35,\n                      objectFit: \"cover\",\n                      borderRadius: \"50%\",\n                      marginRight: 10\n                    },\n                    alt: \"Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"message-sender\",\n                    children: sender._id === (user === null || user === void 0 ? void 0 : user._id) ? \"You\" : sender.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-content\",\n                  children: content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-timestamp-left\",\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, msgIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this);\n          })]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 11,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Your message\",\n              disabled: !user,\n              value: message,\n              onChange: e => setMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            style: {\n              width: \"100%\",\n              backgroundColor: \"#317874\"\n            },\n            disabled: !user,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MessageForm, \"O/Avsn7yoS9Abby5w0pliL5b1/E=\", false, function () {\n  return [useSelector];\n});\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["C:/Users/USER/Portfolio-project-real-time-chaat-app/frontend/src/components/MessageForm.js"],"names":["React","useContext","useEffect","useRef","useState","Button","Col","Form","Row","useSelector","AppContext","MessageForm","message","setMessage","user","state","socket","currentRoom","setMessages","messages","privateMemberMsg","messageEndRef","scrollToBottom","getFormattedDate","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleSubmit","e","preventDefault","minutes","getMinutes","time","getHours","roomId","emit","current","scrollIntoView","behavior","map","idx","_id","date","messagesByDate","msgIdx","content","from","sender","email","picture","width","height","objectFit","borderRadius","marginRight","name","target","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport \"./MessageForm.css\";\n\nfunction MessageForm() {\n  const [message, setMessage] = useState(\"\");\n  const user = useSelector((state) => state.user);\n  const { socket, currentRoom, setMessages, messages, privateMemberMsg } = useContext(AppContext);\n  const messageEndRef = useRef(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  function getFormattedDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\n    const day = String(today.getDate()).padStart(2, \"0\");\n    return `${month}/${day}/${year}`;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!message) return;\n    const today = new Date();\n    const minutes = String(today.getMinutes()).padStart(2, \"0\");\n    const time = `${today.getHours()}:${minutes}`;\n    const roomId = currentRoom;\n    socket.emit(\"message-room\", roomId, message, user, time, getFormattedDate());\n    setMessage(\"\");\n  }\n\n  function scrollToBottom() {\n    messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  return (\n    <>\n      <div className=\"messages-output\">\n        {/* Display room or conversation info */}\n        {/* ... (your existing code for room/conversation info) */}\n        {user &&\n          messages.map(({ _id: date, messagesByDate }, idx) => (\n            <div key={idx}>\n              <p className=\"alert alert-success text-center message-date-indicator\">{date}</p>\n              {messagesByDate?.map(({ content, time, from: sender }, msgIdx) => (\n                <div className={sender?.email === user?.email ? \"message\" : \"incoming-message\"} key={msgIdx}>\n                  <div className=\"message-inner\">\n                    <div className=\"d-flex align-items-center mb-3\">\n                      <img src={sender.picture} style={{ width: 35, height: 35, objectFit: \"cover\", borderRadius: \"50%\", marginRight: 10 }} alt=\"Profile\" />\n                      <p className=\"message-sender\">{sender._id === user?._id ? \"You\" : sender.name}</p>\n                    </div>\n                    <p className=\"message-content\">{content}</p>\n                    <p className=\"message-timestamp-left\">{time}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ))}\n        {/* Scroll to the latest message */}\n        <div ref={messageEndRef} />\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col md={11}>\n            <Form.Group>\n              <Form.Control type=\"text\" placeholder=\"Your message\" disabled={!user} value={message} onChange={(e) => setMessage(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col md={1}>\n            <Button variant=\"primary\" type=\"submit\" style={{ width: \"100%\", backgroundColor: \"#317874\" }} disabled={!user}>\n              <i className=\"fas fa-paper-plane\"></i>\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </>\n  );\n}\n\nexport default MessageForm;\n"]},"metadata":{},"sourceType":"module"}